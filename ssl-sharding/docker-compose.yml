# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 16GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Note: The docker-compose file from github.com is a limited trial that goes into read-only mode after 2 days.
# Get the latest docker-compose.yml file with a 30-day trial license by accessing the Alfresco Content Services trial download page at:
# https://www.alfresco.com/platform/content-services-ecm/trial/download

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        build:
          context: ./alfresco
          args:
            ALFRESCO_TAG: ${ALFRESCO_TAG}
        mem_limit: 1700m
        environment:
            JAVA_OPTS: "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6shard1
                -Dsolr.useDynamicShardRegistration=true
                -Dsolr.secureComms=https
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dalfresco-pdf-renderer.url=http://alfresco-pdf-renderer:8090/
                -Djodconverter.url=http://libreoffice:8090/
                -Dimg.url=http://imagemagick:8090/
                -Dtika.url=http://tika:8090/
                -Dsfs.url=http://shared-file-store:8099/
                -Dshare.host=localhost
                -Dshare.port=8081
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dlocal.transform.service.enabled=true
                -Dtransform.service.enabled=true
                -Dcsrf.filter.enabled=false
                -Xms1500m -Xmx1500m
                "
        ports:
            - 8080:8080

    transform-router:
        mem_limit: 512m
        image: quay.io/alfresco/alfresco-transform-router:${TRANSFORM_ROUTER_TAG}
        environment:
          JAVA_OPTS: " -Xms256m -Xmx512m"
          ACTIVEMQ_URL: "nio://activemq:61616"
          IMAGEMAGICK_URL: "http://imagemagick:8090"
          PDF_RENDERER_URL : "http://alfresco-pdf-renderer:8090"
          LIBREOFFICE_URL : "http://libreoffice:8090"
          TIKA_URL : "http://tika:8090"
          FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        links:
          - activemq

    alfresco-pdf-renderer:
        image: quay.io/alfresco/alfresco-pdf-renderer:${PDF_RENDERER_TAG}
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
            ACTIVEMQ_URL: "nio://activemq:61616"
            FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8090:8090
        links:
        - activemq

    imagemagick:
        image: quay.io/alfresco/alfresco-imagemagick:${IMAGE_MAGICK_TAG}
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
            ACTIVEMQ_URL: "nio://activemq:61616"
            FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8091:8090
        links:
        - activemq

    libreoffice:
        image: quay.io/alfresco/alfresco-libreoffice:${LIBREOFFICE_TAG}
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
            ACTIVEMQ_URL: "nio://activemq:61616"
            FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8092:8090
        links:
        - activemq

    tika:
        image: quay.io/alfresco/alfresco-tika:${TIKA_TAG}
        mem_limit: 1g
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
            ACTIVEMQ_URL: "nio://activemq:61616"
            FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8093:8090
        links:
        - activemq

    shared-file-store:
        image: alfresco/alfresco-shared-file-store:${SHARED_FILE_STORE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx512m"
            scheduler.content.age.millis: 86400000
            scheduler.cleanup.interval: 86400000
        ports:
            - 8099:8099
        volumes:
            - shared-file-store-volume:/tmp/Alfresco/sfs

    share:
        image: alfresco/alfresco-share:${SHARE_TAG}
        mem_limit: 1g
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -Xms500m
                -Xmx500m
                -Dalfresco.host=localhost
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                "
        ports:
            - 8081:8080

    postgres:
        image: postgres:${POSTGRES_TAG}
        mem_limit: 512m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=300 -c log_min_messages=LOG
        ports:
            - 5432:5432

    solr6shard1:
        build:
          context: ./solr6
          args:
            - SEARCH_TAG=${SEARCH_TAG}
            - SOLR_HOSTNAME=solr6shard1
            - NUM_SHARDS=2
            - SHARD_ID=0
        mem_limit: 2g
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "8080"
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6shard1"
            SOLR_SOLR_PORT: "8983"
            SOLR_SSL_TRUST_STORE: "/opt/alfresco-insight-engine/keystore/ssl.repo.client.truststore"
            SOLR_SSL_TRUST_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
            SOLR_SSL_KEY_STORE: "/opt/alfresco-insight-engine/keystore/ssl.repo.client.keystore"
            SOLR_SSL_KEY_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
            SOLR_SSL_NEED_CLIENT_AUTH: "true"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms2g -Xmx2g"
            SOLR_OPTS: "
                -Djavax.net.ssl.keyStoreType=JCEKS
                -Djavax.net.ssl.trustStoreType=JCEKS
                -Dsolr.ssl.checkPeerName=false
                -Dsolr.allow.unsafe.resourceloading=true
                -Dalfresco.encryption.ssl.keystore.location=/opt/alfresco-insight-engine/keystore/ssl.repo.client.keystore
                -Dalfresco.encryption.ssl.keystore.passwordFileLocation=/opt/alfresco-insight-engine/keystore/ssl-keystore-passwords.properties
                -Dalfresco.encryption.ssl.keystore.type=JCEKS
                -Dalfresco.encryption.ssl.truststore.location=/opt/alfresco-insight-engine/keystore/ssl.repo.client.truststore
                -Dalfresco.encryption.ssl.truststore.passwordFileLocation=/opt/alfresco-insight-engine/keystore/ssl-truststore-passwords.properties
                -Dalfresco.encryption.ssl.truststore.type=JCEKS
            "
        ports:
            - 8083:8983 #Browser port
        volumes:
            - ./solr6/keystore:/opt/alfresco-insight-engine/keystore

    solr6shard2:
        build:
          context: ./solr6
          args:
            - SEARCH_TAG=${SEARCH_TAG}
            - SOLR_HOSTNAME=solr6shard2
            - NUM_SHARDS=2
            - SHARD_ID=1
        mem_limit: 2g
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "8080"
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6shard2"
            SOLR_SOLR_PORT: "8983"
            SOLR_SSL_TRUST_STORE: "/opt/alfresco-insight-engine/keystore/ssl.repo.client.truststore"
            SOLR_SSL_TRUST_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
            SOLR_SSL_KEY_STORE: "/opt/alfresco-insight-engine/keystore/ssl.repo.client.keystore"
            SOLR_SSL_KEY_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
            SOLR_SSL_NEED_CLIENT_AUTH: "true"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms2g -Xmx2g"
            SOLR_OPTS: "
                -Djavax.net.ssl.keyStoreType=JCEKS
                -Djavax.net.ssl.trustStoreType=JCEKS
                -Dsolr.ssl.checkPeerName=false
                -Dsolr.allow.unsafe.resourceloading=true
                -Dalfresco.encryption.ssl.keystore.location=/opt/alfresco-insight-engine/keystore/ssl.repo.client.keystore
                -Dalfresco.encryption.ssl.keystore.passwordFileLocation=/opt/alfresco-insight-engine/keystore/ssl-keystore-passwords.properties
                -Dalfresco.encryption.ssl.keystore.type=JCEKS
                -Dalfresco.encryption.ssl.truststore.location=/opt/alfresco-insight-engine/keystore/ssl.repo.client.truststore
                -Dalfresco.encryption.ssl.truststore.passwordFileLocation=/opt/alfresco-insight-engine/keystore/ssl-truststore-passwords.properties
                -Dalfresco.encryption.ssl.truststore.type=JCEKS
            "
        ports:
            - 8084:8983 #Browser port
        volumes:
            - ./solr6/keystore:/opt/alfresco-insight-engine/keystore

    zeppelin:
        build:
          context: ./zeppelin
          args:
            - ZEPPELIN_TAG=${ZEPPELIN_TAG}
        environment:
            REPO_PROTOCOL: "https"
            REPO_HOST: "alfresco"
            REPO_PORT: "8443"
            JAVA_OPTS: "
                -Dalfresco.enable.ssl=true
                -Dsolr.ssl.checkPeerName=false
                -Djavax.net.ssl.keyStore=/zeppelin/keystore/ssl.repo.client.keystore
                -Djavax.net.ssl.keyStorePassword=kT9X6oe68t
                -Djavax.net.ssl.keyStoreType=JCEKS
                -Djavax.net.ssl.trustStore=/zeppelin/keystore/ssl.repo.client.truststore
                -Djavax.net.ssl.trustStorePassword=kT9X6oe68t
                -Djavax.net.ssl.trustStoreType=JCEKS
            "
        ports:
            - 9090:9090
        volumes:
            - ./zeppelin/keystore:/zeppelin/keystore

    activemq:
        image: alfresco/alfresco-activemq:${ACTIVE_MQ_TAG}
        mem_limit: 1g
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP

volumes:
    shared-file-store-volume:
        driver_opts:
            type: tmpfs
            device: tmpfs
